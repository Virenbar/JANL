'------------------------------------------------------------------------------
' <auto-generated>
'     Этот код создан программой.
'     Исполняемая версия:4.0.30319.42000
'
'     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
'     повторной генерации кода.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace Pochta
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data")>  _
    Partial Public Class CustomDutyEventsForMailFault
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private errorIDField As CustomDutyEventsForMailErrors
        
        Private errorIDFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ErrorID() As CustomDutyEventsForMailErrors
            Get
                Return Me.errorIDField
            End Get
            Set
                Me.errorIDField = value
                Me.RaisePropertyChanged("ErrorID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ErrorIDSpecified() As Boolean
            Get
                Return Me.errorIDFieldSpecified
            End Get
            Set
                Me.errorIDFieldSpecified = value
                Me.RaisePropertyChanged("ErrorIDSpecified")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data")>  _
    Public Enum CustomDutyEventsForMailErrors
        
        '''<remarks/>
        BarcodeIsNull
        
        '''<remarks/>
        InternalServiceError
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data")>  _
    Partial Public Class CustomDutyEvent
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private numberField As String
        
        Private eventDateTimeField As Date
        
        Private eventDateTimeFieldSpecified As Boolean
        
        Private eventTypeField As String
        
        Private eventNameField As String
        
        Private indexToField As String
        
        Private indexEventField As String
        
        Private countryEventCodeField As String
        
        Private countryToCodeField As String
        
        Private sumPaymentForwardField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Number() As String
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
                Me.RaisePropertyChanged("Number")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property EventDateTime() As Date
            Get
                Return Me.eventDateTimeField
            End Get
            Set
                Me.eventDateTimeField = value
                Me.RaisePropertyChanged("EventDateTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EventDateTimeSpecified() As Boolean
            Get
                Return Me.eventDateTimeFieldSpecified
            End Get
            Set
                Me.eventDateTimeFieldSpecified = value
                Me.RaisePropertyChanged("EventDateTimeSpecified")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property EventType() As String
            Get
                Return Me.eventTypeField
            End Get
            Set
                Me.eventTypeField = value
                Me.RaisePropertyChanged("EventType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property EventName() As String
            Get
                Return Me.eventNameField
            End Get
            Set
                Me.eventNameField = value
                Me.RaisePropertyChanged("EventName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IndexTo() As String
            Get
                Return Me.indexToField
            End Get
            Set
                Me.indexToField = value
                Me.RaisePropertyChanged("IndexTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IndexEvent() As String
            Get
                Return Me.indexEventField
            End Get
            Set
                Me.indexEventField = value
                Me.RaisePropertyChanged("IndexEvent")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CountryEventCode() As String
            Get
                Return Me.countryEventCodeField
            End Get
            Set
                Me.countryEventCodeField = value
                Me.RaisePropertyChanged("CountryEventCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CountryToCode() As String
            Get
                Return Me.countryToCodeField
            End Get
            Set
                Me.countryToCodeField = value
                Me.RaisePropertyChanged("CountryToCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property SumPaymentForward() As String
            Get
                Return Me.sumPaymentForwardField
            End Get
            Set
                Me.sumPaymentForwardField = value
                Me.RaisePropertyChanged("SumPaymentForward")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data")>  _
    Partial Public Class CustomDutyEventsForMailInput
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private barcodeField As String
        
        Private languageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
                Me.RaisePropertyChanged("Barcode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class UserParameters
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sendCtgField As Rtm02Parameter
        
        Private sndrField As String
        
        Private rcpnField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SendCtg() As Rtm02Parameter
            Get
                Return Me.sendCtgField
            End Get
            Set
                Me.sendCtgField = value
                Me.RaisePropertyChanged("SendCtg")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Sndr() As String
            Get
                Return Me.sndrField
            End Get
            Set
                Me.sndrField = value
                Me.RaisePropertyChanged("Sndr")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Rcpn() As String
            Get
                Return Me.rcpnField
            End Get
            Set
                Me.rcpnField = value
                Me.RaisePropertyChanged("Rcpn")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class Rtm02Parameter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Integer
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class OperationParameters
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private operTypeField As Rtm02Parameter
        
        Private operAttrField As Rtm02Parameter
        
        Private operDateField As Date
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property OperType() As Rtm02Parameter
            Get
                Return Me.operTypeField
            End Get
            Set
                Me.operTypeField = value
                Me.RaisePropertyChanged("OperType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property OperAttr() As Rtm02Parameter
            Get
                Return Me.operAttrField
            End Get
            Set
                Me.operAttrField = value
                Me.RaisePropertyChanged("OperAttr")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property OperDate() As Date
            Get
                Return Me.operDateField
            End Get
            Set
                Me.operDateField = value
                Me.RaisePropertyChanged("OperDate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class ItemParameters
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private barcodeField As String
        
        Private internumField As String
        
        Private validRuTypeField As Boolean
        
        Private validEnTypeField As Boolean
        
        Private complexItemNameField As String
        
        Private mailRankField As Rtm02Parameter
        
        Private postMarkField As Rtm02Parameter
        
        Private mailTypeField As Rtm02Parameter
        
        Private mailCtgField As Rtm02Parameter
        
        Private massField As String
        
        Private maxMassRUField As String
        
        Private maxMassENField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
                Me.RaisePropertyChanged("Barcode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Internum() As String
            Get
                Return Me.internumField
            End Get
            Set
                Me.internumField = value
                Me.RaisePropertyChanged("Internum")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ValidRuType() As Boolean
            Get
                Return Me.validRuTypeField
            End Get
            Set
                Me.validRuTypeField = value
                Me.RaisePropertyChanged("ValidRuType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ValidEnType() As Boolean
            Get
                Return Me.validEnTypeField
            End Get
            Set
                Me.validEnTypeField = value
                Me.RaisePropertyChanged("ValidEnType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ComplexItemName() As String
            Get
                Return Me.complexItemNameField
            End Get
            Set
                Me.complexItemNameField = value
                Me.RaisePropertyChanged("ComplexItemName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property MailRank() As Rtm02Parameter
            Get
                Return Me.mailRankField
            End Get
            Set
                Me.mailRankField = value
                Me.RaisePropertyChanged("MailRank")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property PostMark() As Rtm02Parameter
            Get
                Return Me.postMarkField
            End Get
            Set
                Me.postMarkField = value
                Me.RaisePropertyChanged("PostMark")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property MailType() As Rtm02Parameter
            Get
                Return Me.mailTypeField
            End Get
            Set
                Me.mailTypeField = value
                Me.RaisePropertyChanged("MailType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property MailCtg() As Rtm02Parameter
            Get
                Return Me.mailCtgField
            End Get
            Set
                Me.mailCtgField = value
                Me.RaisePropertyChanged("MailCtg")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=9)>  _
        Public Property Mass() As String
            Get
                Return Me.massField
            End Get
            Set
                Me.massField = value
                Me.RaisePropertyChanged("Mass")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=10)>  _
        Public Property MaxMassRU() As String
            Get
                Return Me.maxMassRUField
            End Get
            Set
                Me.maxMassRUField = value
                Me.RaisePropertyChanged("MaxMassRU")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=11)>  _
        Public Property MaxMassEN() As String
            Get
                Return Me.maxMassENField
            End Get
            Set
                Me.maxMassENField = value
                Me.RaisePropertyChanged("MaxMassEN")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class FinanceParameters
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private paymentField As String
        
        Private valueField As String
        
        Private massRateField As String
        
        Private insrRateField As String
        
        Private airRateField As String
        
        Private rateField As String
        
        Private customDutyField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=0)>  _
        Public Property Payment() As String
            Get
                Return Me.paymentField
            End Get
            Set
                Me.paymentField = value
                Me.RaisePropertyChanged("Payment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=1)>  _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=2)>  _
        Public Property MassRate() As String
            Get
                Return Me.massRateField
            End Get
            Set
                Me.massRateField = value
                Me.RaisePropertyChanged("MassRate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=3)>  _
        Public Property InsrRate() As String
            Get
                Return Me.insrRateField
            End Get
            Set
                Me.insrRateField = value
                Me.RaisePropertyChanged("InsrRate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=4)>  _
        Public Property AirRate() As String
            Get
                Return Me.airRateField
            End Get
            Set
                Me.airRateField = value
                Me.RaisePropertyChanged("AirRate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=5)>  _
        Public Property Rate() As String
            Get
                Return Me.rateField
            End Get
            Set
                Me.rateField = value
                Me.RaisePropertyChanged("Rate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=6)>  _
        Public Property CustomDuty() As String
            Get
                Return Me.customDutyField
            End Get
            Set
                Me.customDutyField = value
                Me.RaisePropertyChanged("CustomDuty")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class Country
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Integer
        
        Private code2AField As String
        
        Private code3AField As String
        
        Private nameField As String
        
        Private nameRUField As String
        
        Private nameENField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Code2A() As String
            Get
                Return Me.code2AField
            End Get
            Set
                Me.code2AField = value
                Me.RaisePropertyChanged("Code2A")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Code3A() As String
            Get
                Return Me.code3AField
            End Get
            Set
                Me.code3AField = value
                Me.RaisePropertyChanged("Code3A")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property NameRU() As String
            Get
                Return Me.nameRUField
            End Get
            Set
                Me.nameRUField = value
                Me.RaisePropertyChanged("NameRU")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property NameEN() As String
            Get
                Return Me.nameENField
            End Get
            Set
                Me.nameENField = value
                Me.RaisePropertyChanged("NameEN")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class Address
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private indexField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Index() As String
            Get
                Return Me.indexField
            End Get
            Set
                Me.indexField = value
                Me.RaisePropertyChanged("Index")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
                Me.RaisePropertyChanged("Description")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class AddressParameters
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private destinationAddressField As Address
        
        Private operationAddressField As Address
        
        Private mailDirectField As Country
        
        Private countryFromField As Country
        
        Private countryOperField As Country
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DestinationAddress() As Address
            Get
                Return Me.destinationAddressField
            End Get
            Set
                Me.destinationAddressField = value
                Me.RaisePropertyChanged("DestinationAddress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property OperationAddress() As Address
            Get
                Return Me.operationAddressField
            End Get
            Set
                Me.operationAddressField = value
                Me.RaisePropertyChanged("OperationAddress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MailDirect() As Country
            Get
                Return Me.mailDirectField
            End Get
            Set
                Me.mailDirectField = value
                Me.RaisePropertyChanged("MailDirect")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CountryFrom() As Country
            Get
                Return Me.countryFromField
            End Get
            Set
                Me.countryFromField = value
                Me.RaisePropertyChanged("CountryFrom")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property CountryOper() As Country
            Get
                Return Me.countryOperField
            End Get
            Set
                Me.countryOperField = value
                Me.RaisePropertyChanged("CountryOper")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class OperationHistoryRecord
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private addressParametersField As AddressParameters
        
        Private financeParametersField As FinanceParameters
        
        Private itemParametersField As ItemParameters
        
        Private operationParametersField As OperationParameters
        
        Private userParametersField As UserParameters
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property AddressParameters() As AddressParameters
            Get
                Return Me.addressParametersField
            End Get
            Set
                Me.addressParametersField = value
                Me.RaisePropertyChanged("AddressParameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FinanceParameters() As FinanceParameters
            Get
                Return Me.financeParametersField
            End Get
            Set
                Me.financeParametersField = value
                Me.RaisePropertyChanged("FinanceParameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ItemParameters() As ItemParameters
            Get
                Return Me.itemParametersField
            End Get
            Set
                Me.itemParametersField = value
                Me.RaisePropertyChanged("ItemParameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property OperationParameters() As OperationParameters
            Get
                Return Me.operationParametersField
            End Get
            Set
                Me.operationParametersField = value
                Me.RaisePropertyChanged("OperationParameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property UserParameters() As UserParameters
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
                Me.RaisePropertyChanged("UserParameters")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data")>  _
    Partial Public Class PostalOrderEventsForMailError
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private errorIDField As PostalOrderEventsForMailErrors
        
        Private errorIDFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ErrorID() As PostalOrderEventsForMailErrors
            Get
                Return Me.errorIDField
            End Get
            Set
                Me.errorIDField = value
                Me.RaisePropertyChanged("ErrorID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ErrorIDSpecified() As Boolean
            Get
                Return Me.errorIDFieldSpecified
            End Get
            Set
                Me.errorIDFieldSpecified = value
                Me.RaisePropertyChanged("ErrorIDSpecified")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data")>  _
    Public Enum PostalOrderEventsForMailErrors
        
        '''<remarks/>
        InvalidLoginOrPassword
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://russianpost.org/operationhistory", ConfigurationName:="Pochta.OperationHistory12")>  _
    Public Interface OperationHistory12
        
        'CODEGEN: Контракт генерации сообщений с пространством имен частей сообщения (http://russianpost.org/operationhistory/data) не соответствует значению по умолчанию (http://russianpost.org/operationhistory).
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryReq"& _ 
            "uest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryRes"& _ 
            "ponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistory/Fa"& _ 
            "ult/OperationHistoryFault", Name:="OperationHistoryFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistory/Fa"& _ 
            "ult/AuthorizationFault", Name:="AuthorizationFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getOperationHistory(ByVal request As Pochta.getOperationHistoryRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="OperationHistoryData")> Pochta.getOperationHistoryResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryReq"& _ 
            "uest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryRes"& _ 
            "ponse")>  _
        Function getOperationHistoryAsync(ByVal request As Pochta.getOperationHistoryRequest) As System.Threading.Tasks.Task(Of Pochta.getOperationHistoryResponse)
        
        'CODEGEN: Контракт генерации сообщений с пространством имен частей сообщения (http://russianpost.org/operationhistory/data) не соответствует значению по умолчанию (http://russianpost.org/operationhistory).
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getLanguagesRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getLanguagesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/Ope"& _ 
            "rationHistoryFault", Name:="OperationHistoryFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/Aut"& _ 
            "horizationFault", Name:="AuthorizationFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/Lan"& _ 
            "guageFault", Name:="LanguageFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getLanguages(ByVal request As Pochta.getLanguagesRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="LanguageData")> Pochta.getLanguagesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getLanguagesRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getLanguagesResponse")>  _
        Function getLanguagesAsync(ByVal request As Pochta.getLanguagesRequest) As System.Threading.Tasks.Task(Of Pochta.getLanguagesResponse)
        
        'CODEGEN: Контракт генерации сообщений с пространством имен частей сообщения (http://www.russianpost.org/custom-duty-info/data) не соответствует значению по умолчанию (http://russianpost.org/operationhistory).
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "MailRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "MailResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(Pochta.CustomDutyEventsForMailFault), Action:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "Mail/Fault/CustomDutyEventsForMailFault", Name:="CustomDutyEventsForMailFault", [Namespace]:="http://www.russianpost.org/custom-duty-info/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "Mail/Fault/AuthorizationFault", Name:="AuthorizationFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "Mail/Fault/LanguageFault", Name:="LanguageFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getCustomDutyEventsForMail(ByVal request As Pochta.getCustomDutyEventsForMailRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="CustomDutyEventsForMailOutput")> Pochta.getCustomDutyEventsForMailResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "MailRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsFor"& _ 
            "MailResponse")>  _
        Function getCustomDutyEventsForMailAsync(ByVal request As Pochta.getCustomDutyEventsForMailRequest) As System.Threading.Tasks.Task(Of Pochta.getCustomDutyEventsForMailResponse)
        
        'CODEGEN: Контракт генерации сообщений с пространством имен частей сообщения (http://russianpost.org/sms-info/data) не соответствует значению по умолчанию (http://russianpost.org/operationhistory).
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/Sm"& _ 
            "sHistoryFault", Name:="SmsHistoryFaultReason", [Namespace]:="http://russianpost.org/sms-info/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/Au"& _ 
            "thorizationFault", Name:="AuthorizationFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.FaultContractAttribute(GetType(String), Action:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/La"& _ 
            "nguageFault", Name:="LanguageFaultReason", [Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getSmsHistory(ByVal request As Pochta.getSmsHistoryRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="SmsHistoryData")> Pochta.getSmsHistoryResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryResponse")>  _
        Function getSmsHistoryAsync(ByVal request As Pochta.getSmsHistoryRequest) As System.Threading.Tasks.Task(Of Pochta.getSmsHistoryResponse)
        
        'CODEGEN: Контракт генерации сообщений с пространством имен частей сообщения (http://www.russianpost.org/RTM/DataExchangeESPP/Data) не соответствует значению по умолчанию (http://russianpost.org/operationhistory).
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMa"& _ 
            "ilRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMa"& _ 
            "ilResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(Pochta.PostalOrderEventsForMailError()), Action:="http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMa"& _ 
            "il/Fault/PostalOrderEventsForMailFault", Name:="PostalOrderEventsForMailFault", [Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function PostalOrderEventsForMail(ByVal request As Pochta.PostalOrderEventsForMailRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="PostalOrderEventsForMaiOutput")> Pochta.PostalOrderEventsForMailResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMa"& _ 
            "ilRequest", ReplyAction:="http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMa"& _ 
            "ilResponse")>  _
        Function PostalOrderEventsForMailAsync(ByVal request As Pochta.PostalOrderEventsForMailRequest) As System.Threading.Tasks.Task(Of Pochta.PostalOrderEventsForMailResponse)
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class OperationHistoryRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private barcodeField As String
        
        Private messageTypeField As Integer
        
        Private languageField As String
        
        Public Sub New()
            MyBase.New
            Me.languageField = "RUS"
        End Sub
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
                Me.RaisePropertyChanged("Barcode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property MessageType() As Integer
            Get
                Return Me.messageTypeField
            End Get
            Set
                Me.messageTypeField = value
                Me.RaisePropertyChanged("MessageType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2),  _
         System.ComponentModel.DefaultValueAttribute("RUS")>  _
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class AuthorizationHeader
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private loginField As String
        
        Private passwordField As String
        
        Private mustUnderstandField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property login() As String
            Get
                Return Me.loginField
            End Get
            Set
                Me.loginField = value
                Me.RaisePropertyChanged("login")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Qualified, [Namespace]:="http://schemas.xmlsoap.org/soap/envelope/")>  _
        Public Property mustUnderstand() As String
            Get
                Return Me.mustUnderstandField
            End Get
            Set
                Me.mustUnderstandField = value
                Me.RaisePropertyChanged("mustUnderstand")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getOperationHistory", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getOperationHistoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public OperationHistoryRequest As Pochta.OperationHistoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public AuthorizationHeader As Pochta.AuthorizationHeader
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal OperationHistoryRequest As Pochta.OperationHistoryRequest, ByVal AuthorizationHeader As Pochta.AuthorizationHeader)
            MyBase.New
            Me.OperationHistoryRequest = OperationHistoryRequest
            Me.AuthorizationHeader = AuthorizationHeader
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getOperationHistoryResponse", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getOperationHistoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.Xml.Serialization.XmlArrayItemAttribute("historyRecord")>  _
        Public OperationHistoryData() As Pochta.OperationHistoryRecord
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal OperationHistoryData() As Pochta.OperationHistoryRecord)
            MyBase.New
            Me.OperationHistoryData = OperationHistoryData
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://russianpost.org/operationhistory/data")>  _
    Partial Public Class LanguageDataLanguage
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private codeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLanguages", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getLanguagesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public AuthorizationHeader As Pochta.AuthorizationHeader
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AuthorizationHeader As Pochta.AuthorizationHeader)
            MyBase.New
            Me.AuthorizationHeader = AuthorizationHeader
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLanguagesResponse", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getLanguagesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://russianpost.org/operationhistory/data"),  _
         System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable:=false)>  _
        Public LanguageData() As Pochta.LanguageDataLanguage
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal LanguageData() As Pochta.LanguageDataLanguage)
            MyBase.New
            Me.LanguageData = LanguageData
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getCustomDutyEventsForMail", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getCustomDutyEventsForMailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public AuthorizationHeader As Pochta.AuthorizationHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data")>  _
        Public CustomDutyEventsForMailInput As Pochta.CustomDutyEventsForMailInput
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal CustomDutyEventsForMailInput As Pochta.CustomDutyEventsForMailInput)
            MyBase.New
            Me.AuthorizationHeader = AuthorizationHeader
            Me.CustomDutyEventsForMailInput = CustomDutyEventsForMailInput
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getCustomDutyEventsForMailResponse", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getCustomDutyEventsForMailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://www.russianpost.org/custom-duty-info/data"),  _
         System.Xml.Serialization.XmlArrayItemAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public CustomDutyEventsForMailOutput() As Pochta.CustomDutyEvent
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CustomDutyEventsForMailOutput() As Pochta.CustomDutyEvent)
            MyBase.New
            Me.CustomDutyEventsForMailOutput = CustomDutyEventsForMailOutput
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://russianpost.org/sms-info/data")>  _
    Partial Public Class SmsHistoryRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private barcodeField As String
        
        Private languageField As String
        
        Public Sub New()
            MyBase.New
            Me.languageField = "RUS"
        End Sub
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
                Me.RaisePropertyChanged("Barcode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1),  _
         System.ComponentModel.DefaultValueAttribute("RUS")>  _
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://russianpost.org/sms-info/data")>  _
    Partial Public Class SmsHistoryRecord
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private numberField As String
        
        Private notificationTypeIDField As String
        
        Private notificationTypeNameField As String
        
        Private notificationStatusIDField As String
        
        Private notificationStatusNameField As String
        
        Private notificationStatusDateField As Date
        
        Private sendedIDField As String
        
        Private sourceOperationField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Number() As String
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
                Me.RaisePropertyChanged("Number")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=2)>  _
        Public Property NotificationTypeID() As String
            Get
                Return Me.notificationTypeIDField
            End Get
            Set
                Me.notificationTypeIDField = value
                Me.RaisePropertyChanged("NotificationTypeID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property NotificationTypeName() As String
            Get
                Return Me.notificationTypeNameField
            End Get
            Set
                Me.notificationTypeNameField = value
                Me.RaisePropertyChanged("NotificationTypeName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=4)>  _
        Public Property NotificationStatusID() As String
            Get
                Return Me.notificationStatusIDField
            End Get
            Set
                Me.notificationStatusIDField = value
                Me.RaisePropertyChanged("NotificationStatusID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property NotificationStatusName() As String
            Get
                Return Me.notificationStatusNameField
            End Get
            Set
                Me.notificationStatusNameField = value
                Me.RaisePropertyChanged("NotificationStatusName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property NotificationStatusDate() As Date
            Get
                Return Me.notificationStatusDateField
            End Get
            Set
                Me.notificationStatusDateField = value
                Me.RaisePropertyChanged("NotificationStatusDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=7)>  _
        Public Property SendedID() As String
            Get
                Return Me.sendedIDField
            End Get
            Set
                Me.sendedIDField = value
                Me.RaisePropertyChanged("SendedID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property SourceOperation() As String
            Get
                Return Me.sourceOperationField
            End Get
            Set
                Me.sourceOperationField = value
                Me.RaisePropertyChanged("SourceOperation")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSmsHistory", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getSmsHistoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public AuthorizationHeader As Pochta.AuthorizationHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/sms-info/data", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/sms-info/data")>  _
        Public SmsHistoryRequest As Pochta.SmsHistoryRequest
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal SmsHistoryRequest As Pochta.SmsHistoryRequest)
            MyBase.New
            Me.AuthorizationHeader = AuthorizationHeader
            Me.SmsHistoryRequest = SmsHistoryRequest
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSmsHistoryResponse", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class getSmsHistoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/sms-info/data", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://russianpost.org/sms-info/data"),  _
         System.Xml.Serialization.XmlArrayItemAttribute("historyRecord")>  _
        Public SmsHistoryData() As Pochta.SmsHistoryRecord
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SmsHistoryData() As Pochta.SmsHistoryRecord)
            MyBase.New
            Me.SmsHistoryData = SmsHistoryData
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data")>  _
    Partial Public Class PostalOrderEventsForMailInput
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private barcodeField As String
        
        Private languageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Barcode() As String
            Get
                Return Me.barcodeField
            End Get
            Set
                Me.barcodeField = value
                Me.RaisePropertyChanged("Barcode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data")>  _
    Partial Public Class PostalOrderEvent
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private numberField As String
        
        Private eventDateTimeField As Date
        
        Private eventDateTimeFieldSpecified As Boolean
        
        Private eventTypeField As String
        
        Private eventNameField As String
        
        Private indexToField As String
        
        Private indexEventField As String
        
        Private sumPaymentForwardField As String
        
        Private countryEventCodeField As String
        
        Private countryToCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Number() As String
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
                Me.RaisePropertyChanged("Number")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property EventDateTime() As Date
            Get
                Return Me.eventDateTimeField
            End Get
            Set
                Me.eventDateTimeField = value
                Me.RaisePropertyChanged("EventDateTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EventDateTimeSpecified() As Boolean
            Get
                Return Me.eventDateTimeFieldSpecified
            End Get
            Set
                Me.eventDateTimeFieldSpecified = value
                Me.RaisePropertyChanged("EventDateTimeSpecified")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property EventType() As String
            Get
                Return Me.eventTypeField
            End Get
            Set
                Me.eventTypeField = value
                Me.RaisePropertyChanged("EventType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property EventName() As String
            Get
                Return Me.eventNameField
            End Get
            Set
                Me.eventNameField = value
                Me.RaisePropertyChanged("EventName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property IndexTo() As String
            Get
                Return Me.indexToField
            End Get
            Set
                Me.indexToField = value
                Me.RaisePropertyChanged("IndexTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property IndexEvent() As String
            Get
                Return Me.indexEventField
            End Get
            Set
                Me.indexEventField = value
                Me.RaisePropertyChanged("IndexEvent")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(DataType:="integer")>  _
        Public Property SumPaymentForward() As String
            Get
                Return Me.sumPaymentForwardField
            End Get
            Set
                Me.sumPaymentForwardField = value
                Me.RaisePropertyChanged("SumPaymentForward")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CountryEventCode() As String
            Get
                Return Me.countryEventCodeField
            End Get
            Set
                Me.countryEventCodeField = value
                Me.RaisePropertyChanged("CountryEventCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CountryToCode() As String
            Get
                Return Me.countryToCodeField
            End Get
            Set
                Me.countryToCodeField = value
                Me.RaisePropertyChanged("CountryToCode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PostalOrderEventsForMail", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class PostalOrderEventsForMailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://russianpost.org/operationhistory/data", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://russianpost.org/operationhistory/data")>  _
        Public AuthorizationHeader As Pochta.AuthorizationHeader
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data")>  _
        Public PostalOrderEventsForMailInput As Pochta.PostalOrderEventsForMailInput
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal PostalOrderEventsForMailInput As Pochta.PostalOrderEventsForMailInput)
            MyBase.New
            Me.AuthorizationHeader = AuthorizationHeader
            Me.PostalOrderEventsForMailInput = PostalOrderEventsForMailInput
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PostalOrderEventsForMailResponse", WrapperNamespace:="http://russianpost.org/operationhistory", IsWrapped:=true)>  _
    Partial Public Class PostalOrderEventsForMailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://www.russianpost.org/RTM/DataExchangeESPP/Data"),  _
         System.Xml.Serialization.XmlArrayItemAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public PostalOrderEventsForMaiOutput() As Pochta.PostalOrderEvent
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PostalOrderEventsForMaiOutput() As Pochta.PostalOrderEvent)
            MyBase.New
            Me.PostalOrderEventsForMaiOutput = PostalOrderEventsForMaiOutput
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface OperationHistory12Channel
        Inherits Pochta.OperationHistory12, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class OperationHistory12Client
        Inherits System.ServiceModel.ClientBase(Of Pochta.OperationHistory12)
        Implements Pochta.OperationHistory12
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getOperationHistory(ByVal request As Pochta.getOperationHistoryRequest) As Pochta.getOperationHistoryResponse Implements Pochta.OperationHistory12.getOperationHistory
            Return MyBase.Channel.getOperationHistory(request)
        End Function
        
        Public Function getOperationHistory(ByVal OperationHistoryRequest As Pochta.OperationHistoryRequest, ByVal AuthorizationHeader As Pochta.AuthorizationHeader) As Pochta.OperationHistoryRecord()
            Dim inValue As Pochta.getOperationHistoryRequest = New Pochta.getOperationHistoryRequest()
            inValue.OperationHistoryRequest = OperationHistoryRequest
            inValue.AuthorizationHeader = AuthorizationHeader
            Dim retVal As Pochta.getOperationHistoryResponse = CType(Me,Pochta.OperationHistory12).getOperationHistory(inValue)
            Return retVal.OperationHistoryData
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getOperationHistoryAsync(ByVal request As Pochta.getOperationHistoryRequest) As System.Threading.Tasks.Task(Of Pochta.getOperationHistoryResponse) Implements Pochta.OperationHistory12.getOperationHistoryAsync
            Return MyBase.Channel.getOperationHistoryAsync(request)
        End Function
        
        Public Function getOperationHistoryAsync(ByVal OperationHistoryRequest As Pochta.OperationHistoryRequest, ByVal AuthorizationHeader As Pochta.AuthorizationHeader) As System.Threading.Tasks.Task(Of Pochta.getOperationHistoryResponse)
            Dim inValue As Pochta.getOperationHistoryRequest = New Pochta.getOperationHistoryRequest()
            inValue.OperationHistoryRequest = OperationHistoryRequest
            inValue.AuthorizationHeader = AuthorizationHeader
            Return CType(Me,Pochta.OperationHistory12).getOperationHistoryAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getLanguages(ByVal request As Pochta.getLanguagesRequest) As Pochta.getLanguagesResponse Implements Pochta.OperationHistory12.getLanguages
            Return MyBase.Channel.getLanguages(request)
        End Function
        
        Public Function getLanguages(ByVal AuthorizationHeader As Pochta.AuthorizationHeader) As Pochta.LanguageDataLanguage()
            Dim inValue As Pochta.getLanguagesRequest = New Pochta.getLanguagesRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            Dim retVal As Pochta.getLanguagesResponse = CType(Me,Pochta.OperationHistory12).getLanguages(inValue)
            Return retVal.LanguageData
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getLanguagesAsync(ByVal request As Pochta.getLanguagesRequest) As System.Threading.Tasks.Task(Of Pochta.getLanguagesResponse) Implements Pochta.OperationHistory12.getLanguagesAsync
            Return MyBase.Channel.getLanguagesAsync(request)
        End Function
        
        Public Function getLanguagesAsync(ByVal AuthorizationHeader As Pochta.AuthorizationHeader) As System.Threading.Tasks.Task(Of Pochta.getLanguagesResponse)
            Dim inValue As Pochta.getLanguagesRequest = New Pochta.getLanguagesRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            Return CType(Me,Pochta.OperationHistory12).getLanguagesAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getCustomDutyEventsForMail(ByVal request As Pochta.getCustomDutyEventsForMailRequest) As Pochta.getCustomDutyEventsForMailResponse Implements Pochta.OperationHistory12.getCustomDutyEventsForMail
            Return MyBase.Channel.getCustomDutyEventsForMail(request)
        End Function
        
        Public Function getCustomDutyEventsForMail(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal CustomDutyEventsForMailInput As Pochta.CustomDutyEventsForMailInput) As Pochta.CustomDutyEvent()
            Dim inValue As Pochta.getCustomDutyEventsForMailRequest = New Pochta.getCustomDutyEventsForMailRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.CustomDutyEventsForMailInput = CustomDutyEventsForMailInput
            Dim retVal As Pochta.getCustomDutyEventsForMailResponse = CType(Me,Pochta.OperationHistory12).getCustomDutyEventsForMail(inValue)
            Return retVal.CustomDutyEventsForMailOutput
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getCustomDutyEventsForMailAsync(ByVal request As Pochta.getCustomDutyEventsForMailRequest) As System.Threading.Tasks.Task(Of Pochta.getCustomDutyEventsForMailResponse) Implements Pochta.OperationHistory12.getCustomDutyEventsForMailAsync
            Return MyBase.Channel.getCustomDutyEventsForMailAsync(request)
        End Function
        
        Public Function getCustomDutyEventsForMailAsync(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal CustomDutyEventsForMailInput As Pochta.CustomDutyEventsForMailInput) As System.Threading.Tasks.Task(Of Pochta.getCustomDutyEventsForMailResponse)
            Dim inValue As Pochta.getCustomDutyEventsForMailRequest = New Pochta.getCustomDutyEventsForMailRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.CustomDutyEventsForMailInput = CustomDutyEventsForMailInput
            Return CType(Me,Pochta.OperationHistory12).getCustomDutyEventsForMailAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getSmsHistory(ByVal request As Pochta.getSmsHistoryRequest) As Pochta.getSmsHistoryResponse Implements Pochta.OperationHistory12.getSmsHistory
            Return MyBase.Channel.getSmsHistory(request)
        End Function
        
        Public Function getSmsHistory(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal SmsHistoryRequest As Pochta.SmsHistoryRequest) As Pochta.SmsHistoryRecord()
            Dim inValue As Pochta.getSmsHistoryRequest = New Pochta.getSmsHistoryRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.SmsHistoryRequest = SmsHistoryRequest
            Dim retVal As Pochta.getSmsHistoryResponse = CType(Me,Pochta.OperationHistory12).getSmsHistory(inValue)
            Return retVal.SmsHistoryData
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_getSmsHistoryAsync(ByVal request As Pochta.getSmsHistoryRequest) As System.Threading.Tasks.Task(Of Pochta.getSmsHistoryResponse) Implements Pochta.OperationHistory12.getSmsHistoryAsync
            Return MyBase.Channel.getSmsHistoryAsync(request)
        End Function
        
        Public Function getSmsHistoryAsync(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal SmsHistoryRequest As Pochta.SmsHistoryRequest) As System.Threading.Tasks.Task(Of Pochta.getSmsHistoryResponse)
            Dim inValue As Pochta.getSmsHistoryRequest = New Pochta.getSmsHistoryRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.SmsHistoryRequest = SmsHistoryRequest
            Return CType(Me,Pochta.OperationHistory12).getSmsHistoryAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_PostalOrderEventsForMail(ByVal request As Pochta.PostalOrderEventsForMailRequest) As Pochta.PostalOrderEventsForMailResponse Implements Pochta.OperationHistory12.PostalOrderEventsForMail
            Return MyBase.Channel.PostalOrderEventsForMail(request)
        End Function
        
        Public Function PostalOrderEventsForMail(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal PostalOrderEventsForMailInput As Pochta.PostalOrderEventsForMailInput) As Pochta.PostalOrderEvent()
            Dim inValue As Pochta.PostalOrderEventsForMailRequest = New Pochta.PostalOrderEventsForMailRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.PostalOrderEventsForMailInput = PostalOrderEventsForMailInput
            Dim retVal As Pochta.PostalOrderEventsForMailResponse = CType(Me,Pochta.OperationHistory12).PostalOrderEventsForMail(inValue)
            Return retVal.PostalOrderEventsForMaiOutput
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Pochta_OperationHistory12_PostalOrderEventsForMailAsync(ByVal request As Pochta.PostalOrderEventsForMailRequest) As System.Threading.Tasks.Task(Of Pochta.PostalOrderEventsForMailResponse) Implements Pochta.OperationHistory12.PostalOrderEventsForMailAsync
            Return MyBase.Channel.PostalOrderEventsForMailAsync(request)
        End Function
        
        Public Function PostalOrderEventsForMailAsync(ByVal AuthorizationHeader As Pochta.AuthorizationHeader, ByVal PostalOrderEventsForMailInput As Pochta.PostalOrderEventsForMailInput) As System.Threading.Tasks.Task(Of Pochta.PostalOrderEventsForMailResponse)
            Dim inValue As Pochta.PostalOrderEventsForMailRequest = New Pochta.PostalOrderEventsForMailRequest()
            inValue.AuthorizationHeader = AuthorizationHeader
            inValue.PostalOrderEventsForMailInput = PostalOrderEventsForMailInput
            Return CType(Me,Pochta.OperationHistory12).PostalOrderEventsForMailAsync(inValue)
        End Function
    End Class
End Namespace
